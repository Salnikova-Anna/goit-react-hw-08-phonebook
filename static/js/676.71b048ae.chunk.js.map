{"version":3,"file":"static/js/676.71b048ae.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\"};","import css from './Section.module.css';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <section className={css.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value.trim()))}\n        className=\"form-control\"\n      />\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"deleteButton\":\"ContactList_deleteButton__3hT3n\",\"contactItem\":\"ContactList_contactItem__ppNQ5\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts?.filter(contact =>\n    contact?.name?.toLowerCase().includes(filter?.toLowerCase())\n  );\n\n  const handleDeleteButton = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(contact => (\n        <li key={contact.id} className={css.contactItem}>\n          {`${contact.name}: ${contact.number} `}\n          <button\n            className={css.deleteButton}\n            type=\"button\"\n            onClick={() => handleDeleteButton(contact.id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrap\":\"ContactForm_inputWrap__XQBhT\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { addContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const name = evt.target.elements.name.value;\n    const number = evt.target.elements.number.value;\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (contacts.some(contact => contact.name === name)) {\n      return alert(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact(contact));\n\n    evt.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={css.inputWrap}>\n        <label htmlFor=\"exampleInputName1\" className={css.formLabel}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={contacts.name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className=\"formInput\"\n          id=\"exampleInputName1\"\n          aria-describedby=\"emailHelp\"\n        />\n      </div>\n      <div className={css.inputWrap}>\n        <label htmlFor=\"exampleInputNumber1\" className={css.formLabel}>\n          Number\n        </label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={contacts.number}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className=\"formInput\"\n          id=\"exampleInputNumber1\"\n          aria-describedby=\"emailHelp\"\n        />\n      </div>\n\n      <button type=\"submit\" className={css.btnSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { Section } from 'components/Section/Section';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        {error && <p>{error}</p>}\n        {isLoading && <p>Loading...</p>}\n        {!isLoading && <ContactList />}\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectError","error","Section","title","children","className","css","Filter","dispatch","useDispatch","useSelector","type","name","value","onChange","event","setFilter","target","trim","ContactList","filteredContacts","contact","toLowerCase","includes","map","number","onClick","id","deleteContact","ContactForm","onSubmit","evt","preventDefault","elements","nanoid","some","alert","addContact","reset","htmlFor","pattern","required","useEffect","fetchContacts"],"sourceRoot":""}